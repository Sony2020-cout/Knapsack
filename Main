#include <iostream>
#include <climits>


int knapsack(int v[], int w[], int n, int W){
    if (W < 0){
        return INT_MIN;
    }
    
    if(n  < 0 || W == 0){
        return 0;
    }
    
    int include = v[n] + knapsack(v, w, n - 1, W - w[n]);
    
    int exclude = knapsack(v, w, n - 1, W);
    
    return std::max(include, exclude);
}


int main()
{
    int v[] = {10, 5, 7, 35, 25, 20};
    int w[] = {2, 3, 8, 6, 3};
    
    int W = 10;
    
    int n = sizeof(v) / sizeof(v[0]);
    
    std::cout << "For this knapsack value is " << knapsack(v, w, n - 1, W);
    
    return 0;
}
